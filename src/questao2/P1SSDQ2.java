/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package questao2;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import weka.associations.Apriori;
import weka.associations.AssociationRule;
import weka.core.Instances;
import weka.core.converters.ConverterUtils;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.NumericToNominal;
import weka.filters.unsupervised.attribute.Remove;

/**
 *
 * @author AMD-FX
 */
public class P1SSDQ2 extends javax.swing.JFrame {

    /**
     * Creates new form P1SSDQ2
     */
    private Instances ins; 
    DefaultListModel model;
    //Para manipular a lista entrar no site:http://www.douglaspasqua.com/2011/12/20/java-tips-usando-jlist/
    public P1SSDQ2() {
        
        try {
            ConverterUtils.DataSource ds = new ConverterUtils.DataSource("src/Respostas-28-07.arff");
            this.ins= ds.getDataSet();
            //System.out.println(ins.toString());

            this.ins.setClassIndex(this.ins.numAttributes() - 1);

            ArrayList<Atributo> atributos = new ArrayList();

            for (int i = 0; i < ins.numAttributes(); i++) {
                Atributo a = new Atributo();
                a.setNome(ins.attribute(i).name());
                // atributo.put(ins.attribute(i).name(), valor)
                ArrayList<String> valores = new ArrayList();
                for (int j = 0; j < ins.attribute(i).numValues(); j++) {
                    valores.add(ins.attribute(i).value(j));
                }
                a.setValores(valores);
                atributos.add(a);
            }

            for (Atributo a : atributos) {
                System.out.println(a);
            }
            
            //System.out.println((ins, new int[]{ 2,5,7}));
            //System.out.println("------------------------");
            // build associator

            //System.out.println(ins.attribute(0).value(0));
            //System.out.println(ins.attribute(0).value(1));
            initComponents();
            model = new DefaultListModel();
            for(Atributo atrib: atributos){
                model.add(model.size(), atrib.getNome());
            }
            jList1.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(P1SSDQ2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_resultado = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        jButton5.setText("Classificar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        txt_resultado.setColumns(20);
        txt_resultado.setRows(5);
        jScrollPane3.setViewportView(txt_resultado);

        jLabel1.setText("Quest√£o 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(0, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
            int[] indexes = jList1.getSelectedIndices();
            Apriori apriori = new Apriori();
            Instances filteredData = ins;
            for(int i: indexes){
                filteredData.deleteAttributeAt(i);
            }
            
            apriori.setClassIndex(filteredData.classIndex());
        try {
            apriori.buildAssociations(filteredData);
        } catch (Exception ex) {
            Logger.getLogger(P1SSDQ2.class.getName()).log(Level.SEVERE, null, ex);
        }

            //output associator
            //System.out.println(apriori);
            System.out.println();
            System.out.println("------------------------1");
            System.out.println(apriori.getAssociationRules().getRules().get(0));

            List<AssociationRule> lista = apriori.getAssociationRules().getRules();
            System.out.println(lista.get(0).getPremise());
            System.out.println(lista.get(0).getConsequence());
            System.out.println(apriori.getNumRules());
            for(AssociationRule ass: lista){
                txt_resultado.append(ass.getPremise()+" ==> "+ass.getConsequence()+"\n");
            }
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(P1SSDQ2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(P1SSDQ2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(P1SSDQ2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(P1SSDQ2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new P1SSDQ2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea txt_resultado;
    // End of variables declaration//GEN-END:variables
    public final Instances associationRules(Instances data, int[] indexes) {

        String associationRules = null;
        Instances newData = data;
        String[] options = new String[2];
        options[0] = "-R";
        options[1] = "1";
        Remove remove = new Remove();
        remove.setAttributeIndicesArray(indexes);
        remove.setInvertSelection(true);
        try {
            
            remove.setOptions(options);
            remove.setInputFormat(data);
            newData = Filter.useFilter(data, remove);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Fail");
        }
        return newData;
        /*
        Instances filteredData = newData;
        NumericToNominal filter = new NumericToNominal();
        try {
            filter.setOptions(options);
            filter.setInputFormat(filteredData);
            filteredData = Filter.useFilter(newData, filter);
        } catch (Exception e1) {
            e1.printStackTrace();
            System.out.println("Fail");
        }

        Apriori aprioriObj = new Apriori();
        aprioriObj.setNumRules(5);
        try {
            aprioriObj.buildAssociations(filteredData);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Fail");
        }
        //associationRules = aprioriObj.toString();
        //System.out.println("A Priori Rules: "+associationRules);

        return aprioriObj;
        
        */

    }

}
